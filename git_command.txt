# MENGINISIASI GIT
Jika folder baru dibuat perlu untuk menginisiasi git agar dapat diterapkan git pada folder tersebut 
dengan perintah -> "git init"

# MEMASUKKAN FILE PADA STAGE GIT
perubahan pada file dapat disimpan sementara di stage dengan perintah 
-> "git add ." (untuk semua file)
-> "git add <file_name>" (untuk satu file tertentu)

# MEMASUKKAN FILE DALAM GIT (COMMIT)
-> "git commit -m "messege" (dalam tanda kutip harus diisi catatan perubahan)

# MEMBATALKAN PERUPAHAN PADA FILE
-> “git clean -f” (Jika kondisi file masih di untracked state)
-> “git restore <file_name>” (Jika kondisi file berada di modified state)
-> “git restore <file_name> --staged” (Jika kondisi file berada di staged state)
Jika kondisi file berada di committed state, cara membatalkan perubahan file tersebut akan dibahas sendiri di revert commit.

#MENLIHAT RIWAYAT PERUBAHAN DENGAN GIT LOG
-> "git log" (untuk penjabaran lengkap)
-> "git log --oneline" (untuk penjabaran singkat)
-> "git log --graph" (untuk penjabaran dengan format lengkap yang lebih rapi)
-> "git log --oneline --graph" (untuk penjabaran singkat dan rapi)
-> "git show <seven_hash_commit>" (untuk penjabaran mengenai commit tertentu)

# MEMBANDINGKAN COMMIT SATU DENGAN YANG LAIN
-> "git diff <seven_hash_commit> <seven_hash_commit>" (Yang dibandingkan di sini hanyalah snapshot dari commit di hash pertama dengan hash kedua, bukan perubahan yang terjadi di semua commit yang berada di antara dua hash tersebut)

# MERESET COMMIT 
-> "git reset" (Mengeluarkan semua file dari stage ke unstage)
-> "git reset <file_name>" (Mengeluarkan file tertentu dari stage ke unstage)
-> "git reset <seven_hash_commit> --soft" (Posisi HEAD pointer berpindah dan melempar semua perubahan yang telah tercatat di commit tersebut menuju Staging Area)
-> "git reset <seven_hash_commit> --mixed" (Posisi HEAD pointer berpindah dan melempar semua perubahan yang telah tercatat di commit tersebut menuju Working Directory (perlu “git add” lagi supaya bisa naik ke Staging Area))
-> "git reset <seven_hash_commit> --hard" (Posisi HEAD pointer berpindah dan membuat Staging Area dan Working Directory menjadi dengan Git Repository (semua perubahan yang telah tercatat di commit tersebut menjadi hilang bahkan, perubahan file pada vscode juga hilang))

